<head>
  <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

  <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c3f3b1d29ba4d09faaad947986c52da5&libraries=services"></script>
  <style>
  .container {
  width: 70%;
  height: 70%;
  margin: 40px auto;

  }
  .area {
  position: absolute;
  background: #fff;
  border: 1px solid #888;
  border-radius: 3px;
  font-size: 12px;
  top: -5px;
  left: 15px;
  padding:2px;
  }

  .info {
  font-size: 12px;
  padding: 5px;
  width : 200px;
  }
  .info .title {
      font-weight: bold;
  }
  </style>
</head>
 <div class="container">
        <div class="alert alert-dark" role="alert">
          음식점과 식육점 통합 지도와 밀도 기반 지도
        </div>
    </div>
<div class="container">
  <div id="map" style="width:1200px;height:1200px;"></div>
</div>
<script>
// var mapContainer = document.getElementById('map'), // 지도를 표시할 div
//     mapOption = {
//         center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
//         level: 3 // 지도의 확대 레벨
//     };
//
// var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

var mapContainer = document.getElementById('map'), // 지도를 표시할 div
    mapOption = {
        center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
        level: 8 // 지도의 확대 레벨
    };


var map = new daum.maps.Map(mapContainer, mapOption),
    customOverlay = new daum.maps.CustomOverlay({}),
    infowindow = new daum.maps.InfoWindow({removable: true});

//행정구역 구분
$.getJSON("/assets/total2.geojson", function(geojson) {

    var data = geojson.features;
    var coordinates = [];    //좌표 저장할 배열
    var name = '';            //행정 구 이름
    var color = '';           //행정 구 색깔(등급)
    var crime_rate = '';        //적발률
    var crime_rate_grade = '';  //적발률 순위
    var move_time = '';     //총출동횟수
    var move_time_grade = ''; //총출동등수
    var seed_meat = '';     //식육 모수 숫자
    var seed_meat_grade = ''; //식육 모수 순위

    $.each(data, function(index, val) {

        coordinates = val.geometry.coordinates;
        name = val.properties.adm_nm;
        color = val.value
        crime_rate = val.crime_rate
        crime_rate_grade = val.crime_rate_grade
        move_time = val.move_time
        move_time_grade = val.move_time_grade
        seed_meat = val.seed_meat
        seed_meat_grade = val.seed_meat_grade

        displayArea(coordinates, name, color, crime_rate,crime_rate_grade,move_time,move_time_grade,seed_meat,seed_meat_grade);

    })
});

// 다각형을 생상하고 이벤트를 등록하는 함수입니다
function displayArea(coordinates, name, color, crime_rate,crime_rate_grade,move_time,move_time_grade,seed_meat,seed_meat_grade) {

    var path = [];

    $.each(coordinates[0], function(index, coordinate) {        //console.log(coordinates)를 확인해보면 보면 [0]번째에 배열이 주로 저장이 됨.  그래서 [0]번째 배열에서 꺼내줌.
      var point = new Object();
      point.x = coordinate[1];
      point.y = coordinate[0];
      path.push(new daum.maps.LatLng(coordinate[1], coordinate[0]));            //new daum.maps.LatLng가 없으면 인식을 못해서 path 배열에 추가
    })

    // 다각형을 생성합니다
    var polygon = new daum.maps.Polygon({
        map: map, // 다각형을 표시할 지도 객체
        path: path,
        strokeWeight: 2,
        strokeColor: '#004c80',
        strokeOpacity: 0.8,
        fillColor: color,
        fillOpacity: 0.7
    });

    // 다각형에 mouseover 이벤트를 등록하고 이벤트가 발생하면 폴리곤의 채움색을 변경합니다
    // 지역명을 표시하는 커스텀오버레이를 지도위에 표시합니다
    daum.maps.event.addListener(polygon, 'mouseover', function(mouseEvent) {
        polygon.setOptions({fillColor: '#000000'});

        customOverlay.setContent('<div class="area">' + name + '</div>');

        customOverlay.setPosition(mouseEvent.latLng);
        customOverlay.setMap(map);
    });

    // 다각형에 mousemove 이벤트를 등록하고 이벤트가 발생하면 커스텀 오버레이의 위치를 변경합니다
    daum.maps.event.addListener(polygon, 'mousemove', function(mouseEvent) {

        customOverlay.setPosition(mouseEvent.latLng);
    });

    // 다각형에 mouseout 이벤트를 등록하고 이벤트가 발생하면 폴리곤의 채움색을 원래색으로 변경합니다
    // 커스텀 오버레이를 지도에서 제거합니다
    daum.maps.event.addListener(polygon, 'mouseout', function() {
        polygon.setOptions({fillColor: color});
        customOverlay.setMap(null);
    });

    // 다각형에 click 이벤트를 등록하고 이벤트가 발생하면 다각형의 이름과 면적을 인포윈도우에 표시합니다
//   daum.maps.event.addListener(polygon, 'click', function(mouseEvent) {
//     var content = '<div class="info">' +
//                   '<div class="title">' + name + '</div>' +
//                   '<div class=info_code>총 적발률 : '+ crime_rate +'</div>' +
//                   '<div class=info_code>총 적발률 순위 : '+ crime_rate_grade +'</div>' +
//                   '<div class=info_code>총 출동 수 : '+ move_time +'</div>' +
//                   '<div class=info_code>총 출동 순위 : '+ move_time_grade +'</div>' +
//                   '<div class=info_code>총 식육점 수 : '+ seed_meat +'</div>' +
//                   '<div class=info_code>총 식육점 등수 : '+ seed_meat_grade +'</div>' +
//                   '</div>' ;
//                  // + '   <div class="size">총 적발률 : ' ++'</div>';

//   infowindow.setContent(content);
//   infowindow.setPosition(mouseEvent.latLng);
//   infowindow.setMap(map);
//   });

    //
    // var content = '<div class="info">' +
    //              '   <div class="title">' + name + '</div>' +
    //              '   <div class="size">총 면적 : 약 ' + Math.floor(polygon.getArea()) + ' m<sup>2</sup></area>' +
    //              '</div>';



}


</script>

<script>
// var mapContainer = document.getElementById('map'), // 지도를 표시할 div
//     mapOption = {
//         center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
//         level: 3 // 지도의 확대 레벨
//     };
//
// var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

// 마커를 표시할 위치와 title 객체 배열입니다
$.getJSON("/assets/go_total3.geojson", function(geojson) {

    var data = geojson.features;
    var x = '';     //식육 모수 숫자
    var y = ''; //식육 모수 순위

    $.each(data, function(index, val) {

        x = val.x;
        y= val.y;
        var latlng = new daum.maps.LatLng(x, y)
        var imageSrc = "/assets/green_point.jpg";
        var imageSize = new daum.maps.Size(5, 5);

        // 마커 이미지를 생성합니다
        var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize);

        // 마커를 생성합니다
        var marker = new daum.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: latlng, // 마커를 표시할 위치
            // title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
            image : markerImage // 마커 이미지
        });
        // displayArea(coordinates, name, color, crime_rate,crime_rate_grade,move_time,move_time_grade,seed_meat,seed_meat_grade);

    })
});


// var positions = [
//     {
//         title: '카카오',
//         latlng: new daum.maps.LatLng(33.450705, 126.570677)
//     },
//     {
//         title: '생태연못',
//         latlng: new daum.maps.LatLng(33.450936, 126.569477)
//     },
//     {
//         title: '텃밭',
//         latlng: new daum.maps.LatLng(33.450879, 126.569940)
//     },
//     {
//         title: '근린공원',
//         latlng: new daum.maps.LatLng(33.451393, 126.570738)
//     }
// ];
//
// // 마커 이미지의 이미지 주소입니다
// var imageSrc = "http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png";
//
// for (var i = 0; i < positions.length; i ++) {
//
//     // 마커 이미지의 이미지 크기 입니다
//     var imageSize = new daum.maps.Size(24, 35);
//
//     // 마커 이미지를 생성합니다
//     var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize);
//
//     // 마커를 생성합니다
//     var marker = new daum.maps.Marker({
//         map: map, // 마커를 표시할 지도
//         position: positions[i].latlng, // 마커를 표시할 위치
//         title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
//         image : markerImage // 마커 이미지
//     });
// }
</script>
